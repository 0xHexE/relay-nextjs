(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{75:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return o})),t.d(n,"default",(function(){return p}));var l=t(3),a=t(7),i=(t(0),t(90)),r={title:"Installation and Setup"},s={unversionedId:"installation-and-setup",id:"installation-and-setup",isDocsHomePage:!1,title:"Installation and Setup",description:"Installing Relay",source:"@site/docs/installation-and-setup.md",slug:"/installation-and-setup",permalink:"/relay-nextjs/docs/installation-and-setup",editUrl:"https://github.com/RevereCRE/relay-nextjs/edit/master/website/docs/installation-and-setup.md",version:"current",sidebar:"docs",previous:{title:"Prerequisites",permalink:"/relay-nextjs/docs/prerequisites"},next:{title:"Configuring relay-nextjs",permalink:"/relay-nextjs/docs/configuration"}},o=[{value:"Installing Relay",id:"installing-relay",children:[]},{value:"Configuring Relay",id:"configuring-relay",children:[]},{value:"Installing Relay Compiler",id:"installing-relay-compiler",children:[]}],c={toc:o};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(l.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"installing-relay"},"Installing Relay"),Object(i.b)("p",null,"Relay comes with quite a number of dependencies that don't involve Next.js. We'll set those up first\nbefore moving on to ",Object(i.b)("inlineCode",{parentName:"p"},"relay-nextjs"),"."),Object(i.b)("p",null,"First install Relay's runtime dependencies:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"npm install react-relay relay-runtime\n")),Object(i.b)("p",null,"TypeScript users should install appropriate ",Object(i.b)("inlineCode",{parentName:"p"},"@types")," packages:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"npm install --save-dev @types/react-relay @types/relay-runtime\n")),Object(i.b)("h2",{id:"configuring-relay"},"Configuring Relay"),Object(i.b)("p",null,"Install ",Object(i.b)("inlineCode",{parentName:"p"},"relay-config")," to provide a single configuration file to the rest of\nRelay:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"npm install --save-dev relay-config\n")),Object(i.b)("p",null,"Create ",Object(i.b)("inlineCode",{parentName:"p"},"relay.config.js"),". For Next.js projects using TypeScript this should look something like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  src: './src',\n  schema: './src/schema/__generated__/schema.graphql',\n  exclude: ['**/node_modules/**', '**/__mocks__/**', '**/__generated__/**'],\n  extensions: ['ts', 'tsx'],\n  language: 'typescript',\n  artifactDirectory: 'src/queries/__generated__',\n};\n")),Object(i.b)("h2",{id:"installing-relay-compiler"},"Installing Relay Compiler"),Object(i.b)("p",null,"The Relay Compiler statically analyzes and optimizes GraphQL queries in your\napplication. To install the dependencies run:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"npm install --save-dev relay-compiler relay-compiler-language-typescript babel-plugin-relay graphql\n")),Object(i.b)("p",null,"For convenience create a ",Object(i.b)("inlineCode",{parentName:"p"},"package.json")," to run the compiler:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "generate:relay": "relay-compiler"\n  }\n}\n')),Object(i.b)("p",null,"Then configure Babel to compile away ",Object(i.b)("inlineCode",{parentName:"p"},"graphql")," strings:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},".babelrc"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "presets": ["next/babel"],\n  "plugins": ["relay"]\n}\n')),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"relay-nextjs")," is designed to run on both the server and client. To avoid pulling in server\ndependencies to the client bundle configure Webpack to ignore any files in ",Object(i.b)("inlineCode",{parentName:"p"},"src/lib/server"),".\nIn ",Object(i.b)("inlineCode",{parentName:"p"},"next.config.js"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  webpack: (config, { isServer, webpack }) => {\n    if (!isServer) {\n      // Ensures no server modules are included on the client.\n      config.plugins.push(new webpack.IgnorePlugin(/lib\\/server/));\n    }\n\n    return config;\n  },\n};\n")),Object(i.b)("p",null,"If your path to server-only files is different please adjust the above RegExp properly."))}p.isMDXComponent=!0}}]);